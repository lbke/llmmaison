---
import Layout from "../../layouts/Layout.astro";
import StringResponse from "../../components/StringResponse.astro";
import SingleChoiceResponse from "../../components/SingleChoiceResponse.astro";
import MultipleChoiceResponse from "../../components/MultipleChoiceResponse.astro";
import InstallationCard from "../../components/InstallationCard.astro";
import ContributeBanner from "../../components/ContributeBanner.astro";
import {
  getInstallationBySlug,
  getAllSlugs,
  getRandomInstallations,
  parseTimestamp,
} from "../../utils/data.js";

export async function getStaticPaths() {
  const slugs = getAllSlugs();
  return slugs.map((slug) => ({ params: { slug } }));
}

const { slug } = Astro.params;
const installation = getInstallationBySlug(slug as string);

if (!installation) {
  return Astro.redirect("/404");
}

const randomInstallations = getRandomInstallations(3, slug as string);

// Be careful that all options might not be listed here since the app was generated based on possible answers

// Define options for choice components (you can expand these based on actual form options)
const installLocationOptions = [
  "Directement sur ma machine",
  "Sur un serveur hébergé localement (je paie pour le matériel avec une installation sur site ou chez un prestataire IT local)",
  "Sur un cloud (je ne gère pas le matériel ou je le loue)",
];

const professionalUseOptions = [
  "Oui elle répond à des besoins professionnels concrets à mon échelle",
  "Oui elle est pleinement fonctionnelle",
  "Partiellement elle nécessite encore du travail",
  "Non elle n'est pas vraiment fonctionnelle",
  "Je ne sais pas",
];

const trainingOptions = [
  "Oui j'entraîne mes propres modèles",
  "Non, j'utilise des modèles existants",
  "Les deux",
];

// console.log("INSTALL LOCATION", installation.installLocation);
---

<Layout
  title={installation.seoTitle}
  description={installation.seoDescription}
  ogTitle={installation.seoTitle}
  ogDescription={installation.seoDescription}
>
  <!-- Header Banner -->
  <section class="bg-gradient-to-r from-blue-600 to-purple-600 text-white py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div
        class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4"
      >
        <div class="flex-1">
          <div class="flex items-center text-sm opacity-90 mb-2">
            <svg
              class="w-4 h-4 mr-2"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            Partagé le {
              parseTimestamp(installation.timestamp).toLocaleDateString("fr-FR")
            }
          </div>
          <h1 class="text-2xl md:text-3xl font-bold mb-2">
            {
              installation.h1Title ||
                `Installation ${installation.primaryModel || "LLM"} par ${installation.name || "la communauté"}`
            }
          </h1>
          <div class="flex flex-col sm:flex-row gap-2 text-sm">
            <span class="opacity-90">
              Installation décrite par : {installation.name || "Anonyme"}
            </span>
            {
              installation.website && (
                <>
                  <span class="hidden sm:inline opacity-60">•</span>
                  <a
                    href={installation.website}
                    rel="author"
                    target="_blank"
                    class="text-blue-200 hover:text-white underline"
                  >
                    Site web
                  </a>
                </>
              )
            }
          </div>
        </div>
      </div>
    </div>
  </section>

  <section>
    <div class="max-w-screen-md mx-auto px-4">
      <h2 class="text-xl mt-8 mb-4">Résumé de cette installation par l'IA</h2>
      <div class="text-sm text-gray-800">
        {
          installation.aiDescription
            .split("\n")
            .map((paragraph) => <p class="mb-4">{paragraph}</p>)
        }
      </div>
    </div>
  </section>

  <!-- Installation Details -->
  <section class="py-12 bg-white">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <dl class="space-y-8">
        <!-- Installation Type & Models -->
        <div class="border-b border-gray-200 pb-8">
          <h2 class="text-2xl font-semibold text-gray-900 mb-6">
            Configuration générale
          </h2>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <SingleChoiceResponse
              field="installLocation"
              label="Type d'installation"
              value={installation.installLocation}
              options={installLocationOptions}
            />
            <StringResponse
              field="primaryModel"
              label="Modèle LLM principal"
              value={installation.primaryModel}
            />
            <StringResponse
              field="otherModels"
              label="Autres modèles utilisés"
              value={installation.otherModels}
            />
            <SingleChoiceResponse
              field="trainsModels"
              label="Entraînement de modèles"
              value={installation.trainsModels}
              options={trainingOptions}
            />
          </div>
        </div>

        <!-- Infrastructure & Hardware -->
        <div class="border-b border-gray-200 pb-8">
          <h2 class="text-2xl font-semibold text-gray-900 mb-6">
            Infrastructure et matériel
          </h2>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <StringResponse
              field="externalProvider"
              label="Prestataire IT externe"
              value={installation.externalProvider}
            />
            <StringResponse
              field="cloudProvider"
              label="Hébergeur cloud"
              value={installation.cloudProvider}
            />
            <StringResponse
              field="providerDetails"
              label="Précisions prestataire/hébergeur"
              value={installation.providerDetails}
            />
            <StringResponse
              field="software"
              label="Logiciels et SaaS utilisés"
              value={installation.software}
            />
            <StringResponse
              field="hasGpu"
              label="Cartes graphiques"
              value={installation.hasGpu}
            />
            <StringResponse
              field="machineDetails"
              label="Détails de la machine"
              value={installation.machineDetails}
            />
            <StringResponse
              field="gpuDetails"
              label="Détails GPU et VRAM"
              value={installation.gpuDetails}
            />
            <StringResponse
              field="rackDetails"
              label="Rack/Serveurs"
              value={installation.rackDetails}
            />
            <StringResponse
              field="hardwareDetails"
              label="Autres précisions matériel"
              value={installation.hardwareDetails}
            />
          </div>
        </div>

        <!-- Usage & Performance -->
        <div class="border-b border-gray-200 pb-8">
          <h2 class="text-2xl font-semibold text-gray-900 mb-6">
            Usage et performances
          </h2>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <StringResponse
              field="installPurpose"
              label="Utilisation de l'installation"
              value={installation.installPurpose}
            />
            <StringResponse
              field="performance"
              label="Performances obtenues"
              value={installation.performance}
            />
            <StringResponse
              field="installReason"
              label="Raison de cette installation"
              value={installation.installReason?.replaceAll(/;/g, " • ")}
            />
            <SingleChoiceResponse
              field="professionalUse"
              label="Usage professionnel"
              value={installation.professionalUse}
              options={professionalUseOptions}
            />
          </div>
        </div>

        <!-- Costs -->
        <div class="border-b border-gray-200 pb-8">
          <h2 class="text-2xl font-semibold text-gray-900 mb-6">Coûts</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <StringResponse
              field="installCost"
              label="Coût d'installation"
              value={installation.installCost}
            />
            <StringResponse
              field="operationCost"
              label="Coût d'opération quotidien"
              value={installation.operationCost}
            />
            <StringResponse
              field="costDetails"
              label="Précisions sur les coûts"
              value={installation.costDetails?.replaceAll(/\-/g, " • ")}
            />
          </div>
        </div>

        <!-- Additional Information -->
        {
          installation.additionalInfo && (
            <div>
              <h2 class="text-2xl font-semibold text-gray-900 mb-6">
                Informations complémentaires
              </h2>
              <StringResponse
                field="additionalInfo"
                label="Autres informations partagées"
                value={installation.additionalInfo}
              />
            </div>
          )
        }

        <!-- Photo section (commented out as requested) -->
        <!--
        <div class="border-t border-gray-200 pt-8">
          <h2 class="text-2xl font-semibold text-gray-900 mb-6">Photo de l'installation</h2>
          {installation.photo && (
            <img 
              src={installation.photo} 
              alt="Photo de l'installation" 
              class="max-w-full h-auto rounded-lg shadow-lg"
            />
          )}
        </div>
        -->
      </dl>
    </div>
  </section>

  <!-- Contribute Banner -->
  <ContributeBanner />

  <!-- More Installations -->
  {
    randomInstallations.length > 0 && (
      <section class="py-16 bg-gray-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="text-center mb-12">
            <h2 class="text-3xl font-bold text-gray-900 mb-4">
              Autres installations de la communauté
            </h2>
            <p class="text-lg text-gray-600 max-w-2xl mx-auto mb-6">
              Découvrez quelques autres configurations partagées par la
              communauté LLM française.
            </p>
            <a
              href="/installations"
              class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 transition-colors mb-8"
            >
              Voir toutes les installations
              <svg
                class="w-5 h-5 ml-2"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 5l7 7-7 7"
                />
              </svg>
            </a>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {randomInstallations.map((installation) => (
              <InstallationCard installation={installation} />
            ))}
          </div>
        </div>
      </section>
    )
  }
</Layout>
